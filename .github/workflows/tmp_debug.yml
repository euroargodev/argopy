name: Debug windows

on:
  workflow_dispatch: # allows you to trigger the workflow run manually
  pull_request:
    types: [synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

jobs:
  core-pinned:

    name: Core - Pinned - Py${{matrix.python-version}}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    continue-on-error: ${{ matrix.experimental }}
#    timeout-minutes: 45
    strategy:
      max-parallel: 12
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        os: ["windows-latest"]
        experimental: [false]

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: us-west-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/ga-ci-tests-argopy-01

      - name: Set environment variables
        run: |
          echo "CONDA_ENV_FILE=ci/requirements/py${{matrix.python-version}}-core-pinned.yml" >> $GITHUB_ENV
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV
          echo "LOG_FILE=argopy-tests-Core-Pinned-Py${{matrix.python-version}}-${{matrix.os}}.log" >> $GITHUB_ENV

      - name: Setup Micromamba ${{ matrix.python-version }}
        uses: mamba-org/setup-micromamba@v2
        with:
          micromamba-version: '1.5.10-0'
          environment-name: argopy-tests
          environment-file: ${{ env.CONDA_ENV_FILE }}
          init-shell: bash
          cache-environment: true
          cache-environment-key: "${{runner.os}}-${{runner.arch}}-py${{matrix.python-version}}-${{env.TODAY}}-${{hashFiles(env.CONDA_ENV_FILE)}}"
          create-args: >-
            python=${{matrix.python-version}}

      - name: Install argopy
        run: |
          python -m pip install --no-deps -e .

      - name: Version info
        run: |
          micromamba info
          micromamba list

      - name: Test 1
        run: |
          python -c "import argopy; print(argopy.utils.format.argo_split_path('/dac/coriolis/3902131/profiles/BD3902131_001.nc'))"

      - name: Test 2
        run: |
          python -c "import argopy; print(argopy.utils.format.argo_split_path('C:/Users/runneradmin/.argopy_tutorial_data/ftp/dac/aoml/13857/profiles/R13857_001.nc'))"

      - name: Test 3
        run: |
          python -c "import argopy; print(argopy.utils.format.argo_split_path('s3://argo-gdac-sandbox/pub/dac/aoml/13857/profiles/R13857_001.nc'))"
